<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd">
	<id>runtime-package</id>
	<formats>
		<format>dir</format>
	</formats>
	<baseDirectory>${project.artifactId}</baseDirectory>
	<includeBaseDirectory>false</includeBaseDirectory>
	<fileSets>
		<fileSet>
			<directory>${project.basedir}/src/main/scripts</directory>
			<outputDirectory>/bin</outputDirectory>
		</fileSet>
		<fileSet>
			<directory>${project.basedir}/src/main/resources</directory>
			<outputDirectory>/config</outputDirectory>
			<includes>
				<include>*.xml</include>
				<include>*.properties</include>
				<include>*.yml</include>
			</includes>
		</fileSet>
	</fileSets>
	<dependencySets>
		<dependencySet>
			<outputDirectory>/lib</outputDirectory>
			<!-- 是否把当前项目的输出jar包并使用，true则会把当前项目输出为jar包到输出目录,false不输出 -->
			<useProjectArtifact>false</useProjectArtifact>
			<scope>system</scope>
			<!-- 依赖输出目录，相对输出目录的根目录，当前示例把依赖输出到lib目录 -->
		</dependencySet>
		<dependencySet>
			<outputDirectory>lib</outputDirectory>
			<scope>runtime</scope>
			<excludes>
				<exclude>${project.groupId}:${project.artifactId}</exclude>
			</excludes>
		</dependencySet>
		<dependencySet>
			<outputDirectory>/app</outputDirectory>
			<includes>
				<include>${project.groupId}:${project.artifactId}</include>
			</includes>
			<unpack>true</unpack>
		</dependencySet>
	</dependencySets>
</assembly>  